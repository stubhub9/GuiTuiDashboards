<Window x:Class="HandheldButtonGui.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HandheldButtonGui"
        mc:Ignorable="d"
        Title="MainWindow" Height="500" Width="500">
	<!--  Concept:  A handheld controller with simulated Touchscreen Buttons [ using: Normal Mouse Buttons]; but could be a Display with Keyboard, 10 key or a Dedicated Button controller  
    [ Just wiring Button Commands through a model to a UI with clickable buttons.] 
    
        Design Choice:  Buttons represent a touch screen; So buttons can change or disappear.
    
        Combine Color and Textures to contrast options.
        
    Top Header:  Company Banner, Version,  Connected Icons
    Top Row:    Display grid, Text OUTPUT
    
    Bottom Row: 2 column
            Power       On/ Off,        Password,   Load,           Save                   
    
            Options:        Display,    Settings,   Rename,         Help 
    
            Display:        BG,         FG,         Brightness,    FontSize 
    
            Operations:     F1      F2      F3      F4
    
            
    
            4 button  aswd, arrows
                                    UP > BACKTRACK
                        
                       SCROLL LEFT                 SCROLL RIGHT
    
                                    DOWN >  SELECT  
    
    
    
            2 BUTTON        YES >  COMMIT      NO >  BACK
    
    
    
    
    
    -->

	<Window.Resources>
		<Style x:Key="PropertyTriggerExampleButtonStyle"
		TargetType="{x:Type Button}">
			<Setter Property="Opacity" Value="0.25" />
			<Style.Triggers>
				<Trigger Property="IsMouseOver" Value="True">
					<Trigger.EnterActions>
						<BeginStoryboard>
							
						</BeginStoryboard>
					</Trigger.EnterActions>
				</Trigger>
			</Style.Triggers>
		</Style>
	
	
	
	</Window.Resources>


	<Grid x:Name="MainGrid1"
        ShowGridLines="True">
		<Grid.RowDefinitions>
			<RowDefinition Height="35*"/>
			<RowDefinition Height="200*"/>
			<RowDefinition Height="200*"/>
			<RowDefinition Height="15*"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="2*"/>
			<ColumnDefinition Width="43*"/>
			<ColumnDefinition Width="43*"/>
			<ColumnDefinition Width="2*"/>

		</Grid.ColumnDefinitions>
		<!--
                <Rectangle x:Name="rectTopBanner" 
                  Fill="{Binding BannerColor, Converter={StaticResource ColorToBrushConverter1}}" 
                   HorizontalAlignment="Center" Height="34" Stroke="Black"
                   VerticalAlignment="Center" Width="430" 
                   Grid.Column="1" Grid.ColumnSpan="1"
                   />
            -->
		
		
		<Rectangle x:Name="rectTopBanner" 
		Grid.Column="1" 
      Fill="{Binding _bannerBrush1}" Stroke="Black"
      Height="34" Width="430" 
       />

		<!--***********************************************************************************************************************************
		*******      ROW 1     COL 1      *******      ROW 1     COL 1      *******      ROW 1     COL 1      *******      ROW 1     COL 1      -->

		<Canvas
		Background="DarkGray"
        Grid.Column="1" Grid.Row="1"
		>
			<Canvas.Triggers>

				<EventTrigger RoutedEvent="Canvas.Loaded">
					<EventTrigger.Actions>
						<BeginStoryboard>
							<Storyboard>
								<DoubleAnimation
								Storyboard.TargetName="motorPath"
								Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)"
								Duration="0:0:10">
								</DoubleAnimation>
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger.Actions>
				</EventTrigger>
			</Canvas.Triggers>
			<!--  Rectangle worked as a Grid Cell background;
				But Stretch does not seem to work on Canvas

			<Rectangle x:Name="BackgroundRect"
        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
         Fill="DarkGray" Stroke="Black" />

		 -->

			<!--
         Animate Y from 10 to 18
         -->
			<!--Margin="33,10,0,0"-->
			<Button x:Name="spstButton"
        HorizontalAlignment="Left" VerticalAlignment="Top"  
		Canvas.Left="33" Canvas.Top="10" 
		Padding="0"
        Width="40" Height="40" 
        Click="fingerButton_Click">
				<Button.Triggers>
					<EventTrigger RoutedEvent="Button.Loaded">
					<!--<EventTrigger RoutedEvent="MouseEnter">-->

						<EventTrigger.Actions>
							<BeginStoryboard>
								<!--    Storyboards:    MAP the Animation Object to the Target Property;
                                                are ALWAYS wrapped by BeginStoryBoard parents. -->
								<!--	HAVE TO WRAP Attached Properties in Parenthesis -->
								<Storyboard TargetProperty ="(Canvas.Top)">
									<!--    Animation Elements are placed inside StoryBoard -->
									<DoubleAnimation From="10" To="18"
                                Duration="0:0:1"
                                 RepeatBehavior="Forever"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger.Actions>

					</EventTrigger>
				</Button.Triggers>

				<StackPanel
            Background="DarkGray"
            Margin="0" >
					<TextBlock TextWrapping="Wrap" 
            HorizontalAlignment="Left" VerticalAlignment="Top" 
            Margin="10,0,0,0" Padding="0"
            FontSize="18"
            Text="&#x261F;"/>


					<Path x:Name="Switch1"
        Fill="Red" Stroke="Black" 
        StrokeThickness="1"
        Margin="0">
						<Path.Data>
							<!-- Create a composite shape. -->
							<GeometryGroup>
								<RectangleGeometry Rect="0,10,35,5" />
								<RectangleGeometry Rect="15,0,5,10" />
							</GeometryGroup>
						</Path.Data>
					</Path>

				</StackPanel>
			</Button>



			<Rectangle x:Name="Conductor_L1"
        HorizontalAlignment="Left" VerticalAlignment="Top"
         Margin="5,20,0,0" 
         Fill="Black" Stroke="Black"  
         Height="150" Width="5" />

			<!--		<Rectangle x:Name="Conductor_L2"
        Grid.Column="1"  Grid.Row="1"
        HorizontalAlignment="Left" VerticalAlignment="Top"
         Margin="200,20,0,0" 
         Fill="Black" Stroke="Black"  
         Height="150" Width="5" />
         -->



			<Path 
        x:Name="Neutral_N"
        Fill="Ivory" Stroke="Black" 
        StrokeThickness="1">
				<Path.Data>
					<RectangleGeometry Rect="220,20,5,150" />
				</Path.Data>
			</Path>


			<Rectangle x:Name="Conductor_L1A"
        HorizontalAlignment="Left" VerticalAlignment="Top"
         Margin="10,60,0,0" 
         Fill="Black" Stroke="Black"  
         Height="5" Width="25" />

			<Rectangle x:Name="SwitchLeg_L1A"
        HorizontalAlignment="Left" VerticalAlignment="Top"
         Margin="70,60,0,0" 
         Fill="DarkRed" Stroke="Black"  
         Height="5" Width="68" />

			<Rectangle x:Name="Neutral_N1"
        HorizontalAlignment="Left" VerticalAlignment="Top"
         Margin="178,60,0,0" 
         Fill="Ivory" Stroke="Black"  
         Height="5" Width="42" />



			<Path 
        x:Name="SwitchLeg_L1A2"
        Fill="DarkRed" Stroke="Black" 
        StrokeThickness="1">
				<Path.Data>
					<RectangleGeometry Rect="90,65,5,50" />
				</Path.Data>
			</Path>


			<Path 
        x:Name="ConductorTap_2B"
        Fill="DarkRed" Stroke="Black" 
        StrokeThickness="1">
				<Path.Data>
					<RectangleGeometry Rect="95,110,43,5" />
				</Path.Data>
			</Path>



			<Path 
        x:Name="Neutral_N2"
        Fill="Ivory" Stroke="Black" 
        StrokeThickness="1">
				<Path.Data>
					<RectangleGeometry Rect="178,110,42,5" />
				</Path.Data>
			</Path>







			<Ellipse x:Name="Switch1_Line"
        HorizontalAlignment="Left" VerticalAlignment="Top"
        Height="9" Width="9"
        Margin="34,58,0,0"  
        Fill="Ivory" Stroke="Black"  />



			<Path x:Name="Switch1_Load"
        Fill="LemonChiffon" Stroke="Black" 
        StrokeThickness="1">
				<Path.Data>
					<EllipseGeometry 
                Center="66,62" RadiusX="4.0" RadiusY="4.0" />
				</Path.Data>
			</Path>









			<Path x:Name="motorPath"
        Fill="Green" Stroke="Black" 
        StrokeThickness="1">
				<Path.Data>
					<!-- Create a composite shape. -->
					<GeometryGroup>
						<EllipseGeometry Center="158,60" RadiusX="20" RadiusY="20" />
						<EllipseGeometry Center="158,60" RadiusX="20" RadiusY="6" />
						<EllipseGeometry Center="158,60" RadiusX="6" RadiusY="20" />
					</GeometryGroup>
				</Path.Data>
			</Path>


			<Path x:Name="Light"
        Fill="DarkGoldenrod" Stroke="Black" 
        StrokeThickness="1">
				<Path.Data>
					<!-- Create a composite shape. -->
					<GeometryGroup>
						<EllipseGeometry Center="158,112" RadiusX="20" RadiusY="20" />
						<EllipseGeometry Center="158,112" RadiusX="18" RadiusY="18" />
						<EllipseGeometry Center="158,112" RadiusX="16" RadiusY="16" />
					</GeometryGroup>
				</Path.Data>
			</Path>









			<TextBlock 
        HorizontalAlignment="Right"  VerticalAlignment="Top"
        Margin="80,5,0,0" 
        Width="100"
        Background="LightYellow"
        FontSize="8" FontWeight="Bold"
        TextWrapping="Wrap" 
        Text="&#x22D8; Press finger, to operate the SPST NO momentary switch."/>


		</Canvas>



		<!--
             ******    Column 2   Row 1     *****     ******    Column 2   Row 1     *****     ******    Column 2   Row 1     *****     ******    Column 2   Row 1     *****     ******    Column 2   Row 1     *****     
        -->

		<Grid
        
        Grid.Column="2"  Grid.Row="1">

			<Label 
        Margin="5,0,0,0" Padding="2,1"
        Background="LightYellow"
        FontSize="7" FontWeight="Bold"
        HorizontalAlignment="Left" VerticalAlignment="Top" 
        Content="&#x22D8; Press finger to operate the button."  >
				<!--    TRIGGERS are XAML only, EVENT HANDLERS      -->
				<Label.Triggers>
					<EventTrigger RoutedEvent = "Label.Loaded">

						<EventTrigger.Actions>
							<BeginStoryboard>
								<!--    Storyboards:    MAP the Animation Object to the Target Property;
                                                are ALWAYS wrapped by BeginStoryBoard parents. -->
								<Storyboard TargetProperty ="FontSize">
									<!--    Animation Elements are placed inside StoryBoard -->
									<DoubleAnimation From="7" To="50"
                                Duration="0:0:4"
                                 RepeatBehavior="Forever"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger.Actions>
					</EventTrigger>
				</Label.Triggers>
			</Label>


			<Button x:Name="textButton"
        HorizontalAlignment="Right" VerticalAlignment="Bottom"
        Margin="0"
        Height="40" Width="100"
        FontSize="16pt" FontFamily="Verdana" >
				<Button.Triggers>
					<EventTrigger RoutedEvent="Button.Loaded">
						<BeginStoryboard>
							<Storyboard>
								<StringAnimationUsingKeyFrames RepeatBehavior="Forever"
                            Storyboard.TargetProperty="Content"
                            Duration="0:0:3">
									<DiscreteStringKeyFrame Value="/****\" KeyTime="0:0:0" />
									<DiscreteStringKeyFrame Value="-****-" KeyTime="0:0:0.5" />
									<DiscreteStringKeyFrame Value="\O***/" KeyTime="0:0:1.0" />
									<DiscreteStringKeyFrame Value="|OK**|" KeyTime="0:0:1.5" />
									<DiscreteStringKeyFrame Value="/OKA*\" KeyTime="0:0:2.0" />
									<DiscreteStringKeyFrame Value="-OKAY-" KeyTime="0:0:2.5" />

								</StringAnimationUsingKeyFrames>

							</Storyboard>

						</BeginStoryboard>

					</EventTrigger>

				</Button.Triggers>
				Hello
			</Button>


			<Border 
			Height="50" Width="100" 
			BorderBrush="Gray" BorderThickness="1"
			VerticalAlignment="Bottom" HorizontalAlignment="Right"
			Margin="0,0,0,45">
				<StackPanel
				Orientation="Vertical"
				Background="Aquamarine">
					<TextBlock
					FontSize="9" TextWrapping="Wrap" >Using Case with Name to Handle 3 Buttons</TextBlock>
					<StackPanel 
				Background="LightBlue" Orientation="Horizontal" 
				Button.Click="YesNoCancelButton_Click">
						<Button Name="YesButton">Yes</Button>
						<Button Name="NoButton">No</Button>
						<Button Name="CancelButton">Cancel</Button>
					</StackPanel>
				</StackPanel>
			</Border>


			<Image x:Name="theImageObject"
            Stretch="None" 
            HorizontalAlignment="Left" VerticalAlignment="Top"
            Margin="50,20,0,0">
				<Image.RenderTransform>
					<TranslateTransform x:Name="MoveMeTransform" X="50"/>
				</Image.RenderTransform>
				<Image.Triggers>
					<EventTrigger RoutedEvent="Image.Loaded">
						<BeginStoryboard>
							<Storyboard
							RepeatBehavior="Forever">
								<DoubleAnimationUsingKeyFrames
								Storyboard.TargetName="MoveMeTransform"
								Storyboard.TargetProperty="X">
									<SplineDoubleKeyFrame KeyTime="0:0:1.25" Value="0" />
								</DoubleAnimationUsingKeyFrames>

								<DoubleAnimationUsingKeyFrames 
								Storyboard.TargetName="theImageObject"
								Storyboard.TargetProperty="Opacity">
									<SplineDoubleKeyFrame 
									KeyTime="0:0:3.0"
									Value="0.2"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</BeginStoryboard>
					</EventTrigger>
				</Image.Triggers>
				<Image.Source>
					<DrawingImage >
						<!--
		<DrawingImage PresentationOptions:Freeze="True">
		-->
						<DrawingImage.Drawing>

							<GeometryDrawing>
								<GeometryDrawing.Geometry>

									<!-- Create a composite shape. -->
									<GeometryGroup>
										<RectangleGeometry Rect="0,10,50,5" />
										<RectangleGeometry Rect="23,0,5,10" />
									</GeometryGroup>
								</GeometryDrawing.Geometry>
								<GeometryDrawing.Brush>

									<!-- Paint the drawing with a gradient. -->
									<LinearGradientBrush>
										<GradientStop Offset="0.0" Color="#0000FF" />
										<GradientStop Offset="0.25" Color="#0000FF" />
										<GradientStop Offset="0.35" Color="#006666" />
										<GradientStop Offset="0.65" Color="#006666" />
										<GradientStop Offset="0.75" Color="#0000FF" />
										<GradientStop Offset="1.0" Color="#0000FF" />
									</LinearGradientBrush>
								</GeometryDrawing.Brush>
								<GeometryDrawing.Pen>

									<!-- Outline the drawing with a solid color. -->
									<Pen Thickness="1" Brush="DarkBlue" />
								</GeometryDrawing.Pen>
							</GeometryDrawing>
						</DrawingImage.Drawing>
					</DrawingImage>
				</Image.Source>
			</Image>








			<Button x:Name="fingerButton"
        HorizontalAlignment="Left" VerticalAlignment="Top"  
        Margin="80,80,0,0" Padding="0"
        Width="21" Height="25" 
        MouseEnter="btnSpinner_MouseEnter"
        Click="fingerButton_OnClick">

				<TextBlock TextWrapping="Wrap"
            Margin="0" Padding="0"
            FontSize="18"
            Text="&#x261F;"/>
			</Button>


			<Button
			
			Height="30" Width="30"
			HorizontalAlignment="Left" VerticalAlignment="Top"
			Margin="5,20,0,0">
				<Button.Triggers>
					<EventTrigger RoutedEvent="Button.Loaded">
					<!--<EventTrigger RoutedEvent="MouseEnter">-->
						<BeginStoryboard>
							<Storyboard>
								<ThicknessAnimationUsingKeyFrames RepeatBehavior="Forever"
                            Storyboard.TargetProperty="Margin"
                            BeginTime="0:0:0">
									<SplineThicknessKeyFrame 
									Value="5,20,0,0" KeyTime="0:0:0" />

									<SplineThicknessKeyFrame 
									KeyTime="0:0:1"
									Value="50,20,0,0" />

									<SplineThicknessKeyFrame 
									KeyTime="0:0:2"
									Value="100,100,0,0"  />

									<SplineThicknessKeyFrame 
									KeyTime="0:0:3"
									Value="5,20,0,0"  />

								</ThicknessAnimationUsingKeyFrames>

							</Storyboard>

						</BeginStoryboard>

					</EventTrigger>

				</Button.Triggers>
				<Grid>
					<Path x:Name="Switch1_NormallyOpen"
        Fill="Red" Stroke="Black" 
        StrokeThickness="1">




						<Path.Data>
							<!-- Create a composite shape. -->
							<GeometryGroup>
								<RectangleGeometry Rect= "0,10,25,5" />
								<RectangleGeometry Rect="10,0,5,10" />
							</GeometryGroup>
						</Path.Data>
					</Path>
				</Grid>
			</Button>



		</Grid>


	</Grid>
</Window>
